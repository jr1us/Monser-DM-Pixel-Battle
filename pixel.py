# –ê–≤—Ç–æ—Ä—ã —Å–∫—Ä–∏–ø—Ç–∞: jrius & Grigory Tebenkov
# t.me/lcapybarov & t.me/dcapybarov

import requests
import time
import random
from PIL import Image, ImageDraw, ImageFont

BASE_URL = "https://pixelbattle.exfil-dev.ru"
LOGIN_ENDPOINT = "/api/auth.php?action=login"
PLACE_ENDPOINT = "/api/canvas.php?action=place"

USERNAME = "" # - –£–∫–∞–∂–∏—Ç–µ –í–∞—à username
PASSWORD = "123123" # - –£–∫–∞–∂–∏—Ç–µ –í–∞—à –ø–∞—Ä–æ–ª—å –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞

DEFAULT_DELAY = 2.10

def generate_random_color():
    r = random.randint(0, 255)
    g = random.randint(0, 255)
    b = random.randint(0, 255)
    return f"#{r:02x}{g:02x}{b:02x}"


def parse_color(color_input):
    if color_input == "#0":
        return None
    elif color_input.startswith("#") and len(color_input) == 7:
        return color_input.lower()
    else:
        raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–≤–µ—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HEX (#FF0000) –∏–ª–∏ #0 –¥–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤")

def main():
    print("=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∏–∫—Å–µ–ª—å-–±–æ—Ç–∞ ===")
    START_X = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É X –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç–∞: "))
    START_Y = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É Y –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç–∞: "))
    TEXT = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: ")

    while True:
        color_input = input("–í–≤–µ–¥–∏—Ç–µ —Ü–≤–µ—Ç (HEX #RRGGBB –∏–ª–∏ #0 –¥–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤): ")
        try:
            COLOR = parse_color(color_input)
            break
        except ValueError as e:
            print(f"–û—à–∏–±–∫–∞: {e}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    delay_input = input(f"–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –ø–∏–∫—Å–µ–ª—è–º–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é {DEFAULT_DELAY}): ")
    DELAY = float(delay_input) if delay_input else DEFAULT_DELAY

    session = requests.Session()
    resp = session.post(BASE_URL + LOGIN_ENDPOINT, json={
        "username": USERNAME,
        "password": PASSWORD
    })

    if not resp.ok or "user" not in resp.json():
        print("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:", resp.text)
        exit()

    print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!")

    def get_text_pixels(text, font_size=10):
        font = ImageFont.load_default()
        image = Image.new("1", (500, 100))
        draw = ImageDraw.Draw(image)
        draw.text((0, 0), text, font=font, fill=1)
        pixels = image.load()
        coords = []
        for y in range(image.height):
            for x in range(image.width):
                if pixels[x, y] == 1:
                    coords.append((x, y))
        return coords

    text_pixels = get_text_pixels(TEXT)
    print(f"üî¢ –ù–∞–π–¥–µ–Ω–æ {len(text_pixels)} –ø–∏–∫—Å–µ–ª–µ–π –¥–ª—è —Ç–µ–∫—Å—Ç–∞.")

    for index, (dx, dy) in enumerate(text_pixels):
        x = START_X + dx
        y = START_Y + dy

        current_color = generate_random_color() if COLOR is None else COLOR

        response = session.post(BASE_URL + PLACE_ENDPOINT, json={
            "x": x,
            "y": y,
            "color": current_color
        })

        if response.ok:
            print(f"‚úÖ [{index + 1}/{len(text_pixels)}] –ü–∏–∫—Å–µ–ª—å –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ ({x}, {y}) —Ü–≤–µ—Ç {current_color}")
        else:
            print(f"‚ùå [{index + 1}] –û—à–∏–±–∫–∞ –Ω–∞ ({x}, {y}): {response.text}")

        time.sleep(DELAY)

if __name__ == "__main__":
    main()